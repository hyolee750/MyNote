数据类型
Java虚拟机可以操作的数据类型可分为原始类型也叫基本类型和引用类型，与之对应，也存在有原始值和引用值两种类型的数值可用于变量赋值，参数传递，方法返回和运算操作
虚拟机中使用引用类型来表示对某个对象的引用，每一个对象都可能存在多个指向它的引用，对象的操作，传递和检查都通过引用它的引用类型的数据进行操作
原始类型与值
原始类型包括数值类型，布尔类型和返回地址类型
数值类型又分为整型类型和浮点类型
整型类型有
    byte    8位 默认为0 
    short   16位 默认为0
    int     32位 默认为0
    long    64位 默认为0
    char    16位 无符号整数
浮点类型有
    float   单精度 默认为正整0
    double  双精度 默认为正整0
布尔类型
    true和false 默认为false
returnAddress类型
    表示一条字节码指令的操作码，不能与java语言的直接类型对应起来

引用类型和值
有三种引用类型，类类型，数组类型和接口类型
这些引用类型的值分为由类实例，数组实例和实现了某个接口的类实例或数组实例动态创建
引用类型的默认值就是null

PC寄存器
保存java虚拟机正在执行的字节码指令的地址，如果该方法是native的，pc寄存器的值就是undefined

java虚拟机栈
每一条java虚拟机线程都有自己私有的java虚拟机栈，这个栈与线程同时创建，用于存储栈帧，用于存储局部变量和一些过程结果的地方，另外，它在方法调用和返回中也扮演了很重要的角色

java堆
堆是可供各条线程共享的运行时内存区域，也是供所有类实例和数组对象分配内存的区域，java堆在虚拟机启动的时候就被创建

方法区
供各条线程共享的运行时内存区域，存储了每一个类的结构信息，例如运行时常量池，字段和方法数据，构造函数和普通方法的字节码内容，还包括一些在类，实例，接口初始化时用到的特殊方法。方法区在虚拟机启动时创建，是堆的逻辑组成部分

运行时常量池
是每一个类或接口的常量池的运行时表示方式，包含了若干种不同的常量：从编译器可知的数值字面量到必须运行器解析后才能获得的方法或字段引用
运行时常量池都分配在java虚拟机的方法区中，在类和接口被加载到虚拟机后，对应的运行时常量池就被创建出来

本地方法栈
可能会使用到传统的栈来支持native方法的执行

栈帧
是用来存储数据和部分过程结果的数据结构，同时也被用来处理动态链接，方法返回值和异常分派
栈帧随着方法调用而创建，随着方法结束而销毁
栈帧的存储空间分配在java虚拟机栈中，每一个栈帧都有自己的局部变量表，操作数栈和指向当前方法所属的类的运行时常量池

局部变量表
长度由编译期决定
一个局部变量可以保存一个类型为boolean,byte,short,char,float,reference和returnAddress的数据，两个局部变量可以保存一个类型为long和double的数据
局部变量使用索引来进行定位访问
java虚拟机使用局部变量表来完成方法调用时的参数传递

操作数栈
后进先出

动态链接
作用就是将这些符号引用所表示的方法转成实际方法的直接引用
类加载过程中将要解析掉尚未被解析的符号引用

类型转换指令
宽化类型转换，小范围向大范围的类型的安全转换
int类型到long,float,double类型
long类型到float,double类型
float类型到double类型

对象的创建与操作

常量，局部变量的使用和控制结构

运行时数据区域
程序计数器
是一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的行号指示器
字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令
分支，循环，跳转，异常处理，线程恢复等基础功能都需要依赖这个计数器来完成，该程序计数器是线程私有

Java虚拟机栈
线程私有的。它与生命周期与线程相同
每一个方法被执行的时候都会创建一个栈帧，用于存储局部变量表，操作栈，动态链接，方法出口等信息
每一个方法被调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程
局部变量表存放了编译期可知的各种基本数据类型，对象引用类型
局部变量表所需的内存空间在编译期完成分配
在方法运行期间不会改变局部变量表的大小

本地方法栈

java堆
是被所有线程共享的一块区域
所有的对象实例及数组都要在堆上分配
是垃圾收集器管理的主要区域
现代收集器都赛采用分代收集算法
细分为新生代和老生代

方法区
是各个线程共享的内存区域
用于存放已被虚拟机加载的类信息，常量，静态变量，即时编译器编译后的代码等数据

运行时常量池
运行时常量池是方法区的一部分
用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后存放到方法区的运行时常量池





