这个要比sublime text要好多了，至少支持中文，同时也更轻量级，可以作为我日常开发，做笔记的东西了
加油
自己要学习的东西还有很多，不能放弃，只能继续的孤独前行
java自动转换
自动转换的条件
    这两种类型是兼容的
    目的类型的范围比来源类型的大
强制转换
    两种类型兼容
    目的类型的范围比来源类型的小
类型提升的约定
    byte和short类型的值会被提升到int型
    如果一个操作数是long型，整个表达式将被提升到long型
    如果一个操作数是float。整个表达式将被提升到float型
    如果有一个操作数是double，整个表达式将被提升到double型
    
位运算符
    ～ 按位非 NOT
    & 按位与 AND
    | 按位或 OR
    ^ 按位异或 XOR
    >> 右移
    >>> 右移 左边空出的位以0填充
    << 左移
    &= 按位与赋值
    
Java运算符的优先级
最高
()  []  .
++  --  ~   !
*   /   %
+   -   
>>  >>> <<
>   >=  <   <=
==  !=
&
^
|
&&
||
?:
=   op=
最低

switch语句的注意点
    break语句是可选的，如果你省略了break语句，程序将继续执行下一个case语句，有时需要在多个case语句之间没有break语句
    
this关键字
    this总是调用该方法对象的一个引用
    你可以在当前类的类型所允许的对象的任何地方将this作为一个引用
隐藏的实例变量
    局部变量包括传递到方法的正式自变量，可以与类的实例变量的名称重叠，在这种情况下，局部变量就隐藏了实例变量名
    
值传递和引用传递
    在java中，当你给一个方法传递一个简单类型时，它是按照值传递的
    当你给一个方法传递一个对象时，因为对象是通过引用传递的，这样会影响作为参数的对象
    
访问控制符的作用范围 
    这个不用讲了，已经会了

理解static
    声明为static方法的限制
    1.它们仅能调用其他的static方法
    2.它们只能访问static数据
    3.它们不能以任何方式引用this和super
    静态代码快仅在该类被加载时执行一次
    
等下回头还是要去看数据结构和算法的
要做到知其然知其所以然




